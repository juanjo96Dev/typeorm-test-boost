name: ü§ñ Dependabot auto-merge
on: pull_request_target

permissions:
  contents: write
  pull-requests: write

jobs:
  approve-release:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'auto-release')
    steps:
      - name: ‚úÖ Approve patch
        uses: vietanhduong/auto-approve-action@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pr-number: "1"
          comment-body: |
            # Auto Approved
            ## This PR has been approved by the auto-approve-action
      - name: ‚è±Ô∏è Wait for PR approval
        uses: actions/github-script@v5
        timeout-minutes: 5
        with:
          script: |
            const timeout = 5 * 60 * 1000; // 5 minutes
            const interval = 30 * 1000; // 30 seconds
            const startTime = Date.now();
            const prNumber = context.issue.number;
            while (Date.now() - startTime < timeout) {
              const { data: pr } = await github.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber
              });
              if (pr.state === 'closed' && pr.merged) {
                return;
              }
              await new Promise(resolve => setTimeout(resolve, interval));
            }
            throw new Error('PR approval timed out');
      - name: üì¶ Create Release
        id: create_release
        uses: actions/create-release@v1
        timeout-minutes: 5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: $(git describe --tags --abbrev=0)
          release_name: Release $(git describe --tags --abbrev=0)
          draft: false
          prerelease: false
  dependabot:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
    steps:
      - name: üíø Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2.1.0
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: üîì Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: ‚úÖ Approve patch and minor updates
        if: ${{steps.metadata.outputs.update-type == 'version-update:semver-patch' || steps.metadata.outputs.update-type == 'version-update:semver-minor'}}
        run: gh pr review $PR_URL --approve -b "I'm **approving** this pull request because **it includes a patch or minor update**"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: ‚úÖ Approve major updates of development dependencies
        if: ${{steps.metadata.outputs.update-type == 'version-update:semver-major' && steps.metadata.outputs.dependency-type == 'direct:development'}}
        run: gh pr review $PR_URL --approve -b "I'm **approving** this pull request because **it includes a major update of a dependency used only in development**"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: üí¨ Comment on major updates of non-development dependencies
        if: ${{steps.metadata.outputs.update-type == 'version-update:semver-major' && steps.metadata.outputs.dependency-type == 'direct:production'}}
        run: |
          gh pr comment $PR_URL --body "I'm **not approving** this PR because **it includes a major update of a dependency used in production**"
          gh pr edit $PR_URL --add-label "requires-manual-qa"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
